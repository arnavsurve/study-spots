{"ast":null,"code":"var _jsxFileName = \"/Users/asurve/code/study-spots/study-spot-app/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport UserLocation from './UserLocation';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  useEffect(() => {\n    UserLocation().then(location => setUserLocation(location));\n  }, []);\n  if (!userLocation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: defaultLocation,\n    zoom: 12,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"You are here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n// const Map = ({ spotsData }) => {\n//   // Assuming spotsData is an array of study spot objects with coordinates\n//   // Example: [{ id: 1, name: 'Spot 1', lat: 123.45, lng: -67.89 }, ...]\n//\n//   const center = { lat: 40.423831939697266, lng: -86.92457580566406 };\n//   const zoom = 15; // default zoom level\n//\n//   return (\n//     <LoadScript googleMapsApiKey=\"AIzaSyC8DB-8dU06g4iUL84peKG3NtNhtlOkmKM\">\n//       <GoogleMap mapContainerStyle={{ height: '500px', width: '60%' }} center={center} zoom={zoom}>\n//         {spotsData.map((spot) => (\n//           <Marker key={spot.id} position={{ lat: spot.lat, lng: spot.lng }} title={spot.name} />\n//         ))}\n//       </GoogleMap>\n//     </LoadScript>\n//   );\n// };\n_s(Map, \"tBb+ryomPmrBvnn9NjkAIlzHge8=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","UserLocation","jsxDEV","_jsxDEV","Map","_s","userLocation","setUserLocation","useState","useEffect","then","location","children","fileName","_jsxFileName","lineNumber","columnNumber","center","defaultLocation","zoom","style","height","width","url","attribution","position","_c","$RefreshReg$"],"sources":["/Users/asurve/code/study-spots/study-spot-app/src/components/Map.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport UserLocation from './UserLocation';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst Map = () => {\n  const [userLocation, setUserLocation] = useState(null);\n\n  useEffect(() => {\n    UserLocation().then(location => setUserLocation(location));\n  }, []);\n\n  if (!userLocation) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <MapContainer center={defaultLocation} zoom={12} style={{ height: '400px', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n\n      <Marker position={userLocation}>\n        <Popup>You are here</Popup>\n      </Marker>\n\n    </MapContainer>\n  );\n};\n\n// const Map = ({ spotsData }) => {\n//   // Assuming spotsData is an array of study spot objects with coordinates\n//   // Example: [{ id: 1, name: 'Spot 1', lat: 123.45, lng: -67.89 }, ...]\n//\n//   const center = { lat: 40.423831939697266, lng: -86.92457580566406 };\n//   const zoom = 15; // default zoom level\n//\n//   return (\n//     <LoadScript googleMapsApiKey=\"AIzaSyC8DB-8dU06g4iUL84peKG3NtNhtlOkmKM\">\n//       <GoogleMap mapContainerStyle={{ height: '500px', width: '60%' }} center={center} zoom={zoom}>\n//         {spotsData.map((spot) => (\n//           <Marker key={spot.id} position={{ lat: spot.lat, lng: spot.lng }} title={spot.name} />\n//         ))}\n//       </GoogleMap>\n//     </LoadScript>\n//   );\n// };\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAOC,YAAY,MAAM,gBAAgB;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdR,YAAY,CAAC,CAAC,CAACS,IAAI,CAACC,QAAQ,IAAIJ,eAAe,CAACI,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACL,YAAY,EAAE;IACjB,oBAAOH,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEb,OAAA,CAACN,YAAY;IAACoB,MAAM,EAAEC,eAAgB;IAACC,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAV,QAAA,gBACzFT,OAAA,CAACL,SAAS;MACRyB,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eAEFb,OAAA,CAACJ,MAAM;MAAC0B,QAAQ,EAAEnB,YAAa;MAAAM,QAAA,eAC7BT,OAAA,CAACH,KAAK;QAAAY,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAX,EAAA,CA1CMD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}